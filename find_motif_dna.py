s = "CGCTCCGGATGTGTACATCTATTAGTACATCTAGATACATCTATCCTACATCTCTACATCTAATACATCTTACGGTACATCTCGTGACTTCTTACATCTTACTACATCTTCAATACATCTGGTCTACATCTTTTTACATCTCCTACATCTTACATCTGTCCTTTTACATCTATACATCTTACATCTCCTTACATCTAATACATCTAACTACATCTTACATCTCGTCGTACATCTCTACATCTATACATCTTACATCTGCTTACATCTGTATCCTACATCTTAGCTTACATCTATCTACATCTGCTACAAGGATGGTACATCTAGGGGTACATCTCTACATCTTACATCTTACATCTAAACTACATCTTACATCTTACATCTAGCCCTACATCTACCTACATCTTACATCTCGGTACATCTGTACATCTGGTACATCTTACATCTGTTACATCTTACATCTTTGCCTTACATCTTACATCTCCACTACATCTGTTATACATCTGAGACGAAGGCTACATCTCACTACATCTTACATCTCCCACAGATACATCTCCTTAGTTACATCTGTACATCTCTATACATCTCTACATCTGTCTACATCTTACATCTCGTACATCTTACATCTGAGTTACATCTACAGATACATCTAGTACATCTTTACATCTCCCCCTCATACATCTGGTACATCTTACATCTGAATGTACATCTTACATCTCTCAATTAGACACTACATCTAAGTACATCTCTATCTGTGCAGTACATCTGGCGACGTACATCTTCAGATACATCTTACATCTTTACATCTAGGTACATCTTCTCGCGTTACATCTTACATCTTACATCTCGGACCCGTACATCTCTACATCTTACATCTATACTACATCTCTACATCT"
t = "TACATCTTA"

def find_motif(dna:str,motif:str)->list:
    positions = []
    motif_len = len(motif)
    for i in range(len(dna)):
        if dna[i: i + motif_len] == motif:
            positions.append(i+1)
        else: 
            pass
    return positions


print (* find_motif(s, t)) # "*" prints list without commas and square brackets
